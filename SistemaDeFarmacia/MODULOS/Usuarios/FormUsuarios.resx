<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>